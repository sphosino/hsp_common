#ifndef scroll

#addition "keyfps.hsp"
#addition "color_manager.hsp"
#addition "rboxf.hsp"
#addition "range_utils.hsp"

#module scroll px, py, size, tickness, value, value_min, value_max, min_handle_size, direction, col, bar_area

#const DEFAULT_BACK_COLOR  $000000
#const DEFAULT_HANDLE_COLOR  $FF0000

#modinit int x, int y, int 長さ, int 太さ, int 下限, int 上限, local i
	// 基準点
	px = x
	py = y
	
	size = 長さ
	tickness = 太さ

	set_value_minmax thismod, 下限, 上限

	min_handlesize = 5

	direction = 1 | 2

	col = DEFAULT_BACK_COLOR, DEFAULT_HANDLE_COLOR

	dim bar_area,4

	mref i, 2

	return i
	
#modfunc draw_scroll_bar int draw_value_flag, int out_of_area_flag


	horizontal = ((direction & 1)!=0)
	normal = ((direction & 2)!=0) * 2 - 1
	frip = ((direction & 4)!=0) * 2 - 1
	reverse = ((direction & 8)!=0)

	scroll_range = value_max - value_min
	handlesize = limit(size / (scroll_range + 1), min_handlesize, size)
	track_usable_space = size - handlesize

	if out_of_area_flag == 0 {
		if in_rect(bar_area) {
			if _getkey(1) >= 1 {
				; クリックされたときの相対座標
				mouse_offset = mousey-py
				if horizontal: mouse_offset =  mousex - px 
				mouse_offset *= normal
				
				if reverse : mouse_offset = size - mouse_offset

				; 値の更新（共通関数に置き換え）
				value = get_scroll_value(value_min, value_max, size, mouse_offset, handlesize)
			}
		}
	}

	; 描画用のつまみ位置（共通関数に置き換え）
	bar_position = get_scroll_pos(value_min, value_max, size, value, handlesize)
	if reverse : bar_position = size - bar_position - handlesize

	; 描画
	if horizontal {
		bar_area = px , py, px + size * normal, py + tickness * frip
		make_instant_draw_object "BOXF_FAST",px , py, px + size * normal, py + tickness * frip, str(col)
		make_instant_draw_object "BOXF_FAST",px + bar_position * normal, py, px + (bar_position + handlesize) * normal, py + tickness * frip, str(col.1)
	} else {
		bar_area = px , py, px + tickness * frip, py + size * normal
		make_instant_draw_object "BOXF_FAST",px , py, px + tickness * frip, py + size * normal, str(col)
		make_instant_draw_object "BOXF_FAST",px, py + bar_position * normal, px + tickness * frip, py + (bar_position + handlesize) * normal, str(col.1)
	}

	; 値の表示
	if draw_value_flag {
		make_instant_draw_object "STR",px,py,20,20, strf("%d,%d",value,0)
	}
		
	return
#defcfunc local in_rect array a
	if a(0) > a(2) : swap a(0), a(2)
	if a(1) > a(3) : swap a(1), a(3)
	return a(0) <= mousex && a(1) <= mousey && a(2) >= mousex && a(3) >= mousey

#modcfunc is_in_scrollbar
	
	return in_rect(bar_area)

	
#modfunc get_scroll_bar_area array a
	a = bar_area,bar_area.1,bar_area.2,bar_area.3
	return

#modfunc set_color_scroll_bar int p1, int p2
	col = p1, p2
	return

#modfunc set_position_scroll_bar int p1, int p2
	px = p1
	py = p2
	return
	
#modfunc set_value_scroll_bar int p1
	value = limit(p1, value_min, value_max)
	return
	
#modfunc set_value_minmax int p1, int p2
	value_min = p1
	value_max = p2
	if value_min > value_max{
		swap value_min, value_max
	}
	return
#modfunc refresh_scroll_bar int minv, int maxv
	set_value_minmax thismod, minv, maxv

	value = limit(value, value_min, value_max)

	return
#modfunc set_direction int p1
	direction = p1
	return
	
#modcfunc get_direction
	return direction
	
#modfunc set_size_scroll_bar int p1
	size = p1
	return
	
#modfunc set_tickness_scroll_bar int p1
	tickness = p1
	return
	
#modcfunc get_value_scroll_bar
	return value

#ifndef swap
#deffunc local swap var a, var b
	tmp = a
	a = b
	b = tmp
	return
#endif
#modcfunc get_scroll_bar_width
	return tickness

#modfunc scroll_to_bottom
	value = value_max
	return
#modfunc scroll_to_top
	value = value_min
	return

#modfunc add_value_scroll_bar int p1
	value = limit(value + p1, value_min, value_max)
	return
#global
#endif

#if 0;1

newmod b, scroll, 200,200, 80,20, 12,1200
newmod b, scroll, 100,200, 180,20, 10,0: id = stat: set_direction b.id , 8

set_value_scroll_bar b, 300

*main
	manage_keyfps
	color 250,250,250:boxf:color
	

	mw = mousew

	foreach b
		draw_scroll_bar b.cnt,1
		if mw > 0{
			set_value_scroll_bar b.cnt, get_v(b) + 1
		}
		if mw < 0{
			set_value_scroll_bar b.cnt, get_v(b) - 1
		}
	
		stick key
		if key & 512{
			//キー入力されたら
			set_direction b, (get_direction(b.cnt) + 1) \ 16
		}
	loop
	title ""+get_direction(b.cnt)

	redraw: redraw 2
	goto*main
#endif