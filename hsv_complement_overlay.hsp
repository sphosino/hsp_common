#module
//この関数で得られた値を、alphaを掛けて利用する。
#defcfunc get_complement_by_hsv int p1
    r = p1 >> 16 & 255
    g = p1 >> 8  & 255
    b = p1       & 255
    r_ = (0. + r) / 255
    g_ = (0. + g) / 255
    b_ = (0. + b) / 255
    
    // min/max の正確な計算
    cmax = r_ : cmin = r_
    if g_ > cmax : cmax = g_
    if g_ < cmin : cmin = g_
    if b_ > cmax : cmax = b_
    if b_ < cmin : cmin = b_
    
    scale = cmax - cmin
    v = cmax
    
    if cmax == 0 {
        s = 0
    } else {
        s = scale / cmax
    }
    
    // 色相計算
    if scale < 0.02 {
        // ほぼグレースケール
        if v < 0.5 {
            output_h = 60   // 黄色系
        } else {
            output_h = 240  // 青系
        }
    } else {
        if cmax == r_ {
            h = 60 * ((g_ - b_) / scale)
        } else : if cmax == g_ {
            h = 60 * ((b_ - r_) / scale + 2)
        } else {
            h = 60 * ((r_ - g_) / scale + 4)
        }
        
        // 負の値を正規化
        while h < 0 : h += 360 : wend
        
        // 補色計算
        output_h = (h + 180) \ 360
    }
    
    // 彩度・明度調整
    output_s = 1.0
    output_v = v
    if output_v < 0.4 : output_v = 0.8
    if output_v > 0.8 : output_v = 0.4
    
    // 範囲チェック
    output_h_int = (output_h * 191 / 360) \ 192
    output_s_int = (output_s * 255) \ 256
    output_v_int = (output_v * 255) \ 256
    
    hsvcolor output_h_int, output_s_int, output_v_int
    return ginfo_r << 16 | ginfo_g << 8 | ginfo_b
#global