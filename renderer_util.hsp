#ifndef effect_util

#addition "draw_obj/ease.hsp"
#addition "renderer.hsp"


#module effect_util
//make by chatgptさん
#deffunc spawn_effect_fadein int _type, double x, double y, double w, double h, str param, double duration
	id = make_draw_object(MOVE_TYPE_EASE, _type, duration, x, y, w * 0.5, h * 0.5, param)

	set_ease_alpha get_entity_id(id), 0, 255, ease_quad_out
	set_ease_sizex get_entity_id(id), w * 0.5, w, ease_back_out
	set_ease_sizey get_entity_id(id), h * 0.5, h, ease_back_out
	set_easetime_all get_entity_id(id), duration
	return id
#deffunc spawn_effect_flash int _type, double x, double y, double w, double h, str param
	id = make_draw_object(MOVE_TYPE_EASE, _type, 0.3, x, y, w, h, param)
	set_ease_alpha get_entity_id(id), 255, 0, ease_linear ; フラッシュはすぐに消えるイメージなのでLinearで
	set_easetime_all get_entity_id(id), 0.3 ; 時間設定忘れずに
	return id
#deffunc spawn_effect_pop int _type, double x, double y, double w, double h, str param
	id = make_draw_object(MOVE_TYPE_EASE, _type, 0.4, x, y, w, h, param)
	set_ease_sizex get_entity_id(id), w * 1.3, w, ease_back_out
	set_ease_sizey get_entity_id(id), h * 1.3, h, ease_back_out
	set_easetime_all get_entity_id(id), 0.4
	return id

; make by geminiさん
; 以下はGeminiが既存コードを元に提案するユーティリティ関数です。
; エンジン側に位置やアルファ値、サイズのイージング設定関数 (set_ease_posx, set_ease_posy, set_ease_alpha, set_ease_sizex, set_ease_sizey)
; および全体時間のセット関数 (set_easetime_all) が実装されている前提です。
; set_ease_posx, set_ease_posy は、set_ease_sizex などと同様に存在すると仮定しています。

; オブジェクトを指定座標へイージング移動させる
#deffunc spawn_effect_moveto int _type, double start_x, double start_y, double end_x, double end_y, double w, double h, str param, double duration, int ease_type
	id = make_draw_object(MOVE_TYPE_EASE, _type, duration, start_x, start_y, w, h, param)
	eid = get_entity_id(id)
	set_ease_posx eid, start_x, end_x, ease_type
	set_ease_posy eid, start_y, end_y, ease_type
	set_easetime_all eid, duration
	return id

; オブジェクトを透明にフェードアウトさせる
#deffunc spawn_effect_fadeout int _type, double x, double y, double w, double h, str param, double duration, int ease_type
	id = make_draw_object(MOVE_TYPE_EASE, _type, duration, x, y, w, h, param)
	eid = get_entity_id(id)
	set_ease_alpha eid, 255, 0, ease_type ; 不透明から透明へ
	set_easetime_all eid, duration
	return id

; オブジェクトを移動させながらフェードアウトさせる (弾丸の軌跡やパーティクルなどに)
#deffunc spawn_effect_move_and_fade int _type, double start_x, double start_y, double end_x, double end_y, double w, double h, str param, double duration, int move_ease_type, int alpha_ease_type
	id = make_draw_object(MOVE_TYPE_EASE, _type, duration, start_x, start_y, w, h, param)
	eid = get_entity_id(id)
	set_ease_posx eid, start_x, end_x, move_ease_type
	set_ease_posy eid, start_y, end_y, move_ease_type
	set_ease_alpha eid, 255, 0, alpha_ease_type ; 不透明から透明へ
	set_easetime_all eid, duration
	return id

; オブジェクトを拡大させながらフェードアウトさせる (爆発のエフェクトなどに)
#deffunc spawn_effect_scale_and_fade int _type, double x, double y, double w, double h, str param, double duration, double scale_factor, int scale_ease_type, int alpha_ease_type
	id = make_draw_object(MOVE_TYPE_EASE, _type, duration, x, y, w, h, param)
	eid = get_entity_id(id)
	set_ease_sizex eid, w, w * scale_factor, scale_ease_type ; 初期サイズから指定倍率へ拡大
	set_ease_sizey eid, h, h * scale_factor, scale_ease_type
	set_ease_alpha eid, 255, 0, alpha_ease_type ; 不透明から透明へ
	set_easetime_all eid, duration
	return id

//make by claudeさん
; オブジェクトがバウンドするエフェクト (跳ねるような動き)
#deffunc spawn_effect_bounce int _type, double x, double y, double w, double h, str param, double duration, double bounce_height
	id = make_draw_object(MOVE_TYPE_EASE, _type, duration, x, y, w, h, param)
	eid = get_entity_id(id)
	
	; 元の位置から上に上がって、また元の位置に戻る
	set_ease_posy eid, y, y - bounce_height, ease_sine_out;, 0, duration * 0.5
	set_ease_posy eid, y - bounce_height, y, ease_bounce_out;, duration * 0.5, duration
	
	; サイズを縦横で逆にして弾力感を出す (上に上がる時は横に少し縮み、落ちる時は縦に縮む)
	set_ease_sizey eid, h, h * 1.2, ease_sine_out;, 0, duration * 0.5
	set_ease_sizey eid, h * 1.2, h, ease_bounce_out;, duration * 0.5, duration
	set_ease_sizex eid, w, w * 0.9, ease_sine_out;, 0, duration * 0.5
	set_ease_sizex eid, w * 0.9, w, ease_bounce_out;, duration * 0.5, duration
	
	return id

; シェイクエフェクト (揺れる動き)
#deffunc spawn_effect_shake int _type, double x, double y, double w, double h, str param, double duration, double intensity
	id = make_draw_object(MOVE_TYPE_EASE, _type, duration, x, y, w, h, param)
	eid = get_entity_id(id)
	
	; 短い間隔で揺れる効果を4段階で実装
	t1 = duration * 0.25
	t2 = duration * 0.5
	t3 = duration * 0.75
	
	; X方向の揺れ
	set_ease_posx eid, x, x + intensity, ease_sine_in_out;, 0, t1
	set_ease_posx eid, x + intensity, x - intensity, ease_sine_in_out;, t1, t2
	set_ease_posx eid, x - intensity, x + intensity * 0.5, ease_sine_in_out;, t2, t3
	set_ease_posx eid, x + intensity * 0.5, x, ease_sine_in_out;, t3, duration
	
	; Y方向の揺れ (Xと少しずらして自然な揺れに)
	set_ease_posy eid, y, y - intensity * 0.7, ease_sine_in_out;, 0, t1
	set_ease_posy eid, y - intensity * 0.7, y + intensity * 0.7, ease_sine_in_out;, t1, t2
	set_ease_posy eid, y + intensity * 0.7, y - intensity * 0.3, ease_sine_in_out;, t2, t3
	set_ease_posy eid, y - intensity * 0.3, y, ease_sine_in_out;, t3, duration
	
	return id

; 回転しながらフェードアウトするエフェクト
#deffunc spawn_effect_spin_out int _type, double x, double y, double w, double h, str param, double duration, double spin_angle, int ease_type
	id = make_draw_object(MOVE_TYPE_EASE, _type, duration, x, y, w, h, param)
	eid = get_entity_id(id)
	
	; 回転角度の設定 (0度から指定角度まで)
	set_ease_angle eid, 0, spin_angle, ease_type
	
	; 同時にフェードアウト
	set_ease_alpha eid, 255, 0, ease_type
	
	; サイズを少し大きくしながら回転
	set_ease_sizex eid, w, w * 1.2, ease_type
	set_ease_sizey eid, h, h * 1.2, ease_type
	
	set_easetime_all eid, duration
	return id

; パルスエフェクト (拡大縮小を繰り返す鼓動のような動き)
#deffunc spawn_effect_pulse int _type, double x, double y, double w, double h, str param, double duration, int pulse_count, double scale_factor
	id = make_draw_object(MOVE_TYPE_EASE, _type, duration, x, y, w, h, param)
	eid = get_entity_id(id)
	
	; 各パルスの時間を計算
	pulse_time = duration / pulse_count
	
	; パルスごとのタイミングを設定
	for i ,, pulse_count - 1
		start_time = i * pulse_time
		mid_time = start_time + (pulse_time * 0.5)
		end_time = start_time + pulse_time
		
		; 拡大して縮小するアニメーション
		set_ease_sizex eid, w, w * scale_factor, ease_sine_out;, start_time, mid_time
		set_ease_sizex eid, w * scale_factor, w, ease_sine_in;, mid_time, end_time
		
		set_ease_sizey eid, h, h * scale_factor, ease_sine_out;, start_time, mid_time
		set_ease_sizey eid, h * scale_factor, h, ease_sine_in;, mid_time, end_time
	next
	
	return id

; スライドインしてスライドアウトするエフェクト (メッセージ表示などに)
#deffunc spawn_effect_slide int _type, double start_x, double mid_x, double end_x, double y, double w, double h, str param, double in_time, double stay_time, double out_time, int ease_in_type, int ease_out_type
	total_time = in_time + stay_time + out_time
	id = make_draw_object(MOVE_TYPE_EASE, _type, total_time, start_x, y, w, h, param)
	eid = get_entity_id(id)
	
	; スライドイン
	set_ease_posx eid, start_x, mid_x, ease_in_type;, 0, in_time
	
	; スライドアウト
	set_ease_posx eid, mid_x, end_x, ease_out_type;, in_time + stay_time, total_time
	
	return id

; 色が変化するエフェクト
#deffunc spawn_effect_color_shift int _type, double x, double y, double w, double h, str start_color, str end_color, double duration, int ease_type
	id = make_draw_object(MOVE_TYPE_EASE, _type, duration, x, y, w, h, start_color)
	eid = get_entity_id(id)
	
	; 色を変化させる
	;set_ease_color eid, start_color, end_color, ease_type
	set_easetime_all eid, duration
	
	return id


#global
#endif

#if 10
#include "keyfps.hsp"

; テスト用
;spawn_effect_fadein TYPE_RECT, 320, 240, 200, 100, "$FF0000", 0.5 ; 赤い四角がフェードインポップする (ChatGPT作)

; --- Gemini提案関数の使用例 ---
; 青い四角が左上から右下へ移動する
;spawn_effect_moveto TYPE_RECT, 100, 100, 500, 400, 50, 50, "$0000FF", 1.0, ease_quad_in_out

; 緑の四角が右上から出現し、その場でフェードアウトする
;spawn_effect_fadeout TYPE_RECT, 500, 100, 80, 80, "$00FF00", 0.8, ease_quint_out

; 黄色い四角が左下から右上へ斜めに移動しつつフェードアウトする (パーティクル風)
;spawn_effect_move_and_fade TYPE_RECT, 50, 400, 600, 50, 30, 30, "$FFFF00", 1.2, ease_cubic_in, ease_linear

; マゼンタの四角が中央で少し拡大しつつフェードアウトする (簡単な爆発・ヒットエフェクト風)
;spawn_effect_scale_and_fade TYPE_RECT, 320, 240, 40, 40, "$FF00FF", 0.7, 2.5, ease_quad_out, ease_cubic_in

; バウンスエフェクト - 赤い四角が跳ねる
spawn_effect_bounce TYPE_RECT, 200, 300, 60, 60, "$FF0000", 0.8, 80

; シェイクエフェクト - 緑の四角が震える
spawn_effect_shake TYPE_RECT, 320, 240, 100, 100, "$00FF00", 0.6, 15

; 回転フェードアウト - 青い四角が回転しながら消える
spawn_effect_spin_out TYPE_RECT, 400, 200, 70, 70, "$0000FF", 1.0, 360, ease_cubic_out

; パルスエフェクト - 黄色い四角が3回鼓動する
spawn_effect_pulse TYPE_RECT, 150, 150, 50, 50, "$FFFF00", 1.5, 3, 1.4

; スライドエフェクト - 紫の四角が右から入って左へ出る
spawn_effect_slide TYPE_RECT, 640, 320, -100, 240, 200, 80, "$FF00FF", 0.5, 1.0, 0.5, ease_back_out, ease_quint_in

; 色変化エフェクト - 青から赤へ色が変わる
spawn_effect_color_shift TYPE_RECT, 320, 400, 120, 60, "$0000FF", "$FF0000", 2.0, ease_sine_in_out


_make_draw_object MOVE_TYPE_STATIC, TYPE_RECT, LIFE_FOREVER, 640/2,480/2,640,480,""
update_priority_draw_object stat,PRIORITY_BACK
*main
	manage_keyfps
	notify_dt_draw_object frametime()

	draw_objects
	redraw: redraw 2
	goto*main

#endif