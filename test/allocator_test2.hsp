#include "../memory_allocator.hsp"
#addition "WrapCall.as"
screen 0,1900,1000,,0,0
randomize
init_memory_pool 10000

repeat 
	title"作成準備中":await 2000
	title"作成開始"
	dim idlist
	repeat 10
		
		size2 = 10 + rnd(70)
		t = get_new_block(size2)
		idlist(cnt) = t
		debug_check_link_integrity "作成後のリンク整合性チェック"
		if stat {
			draw_memory_pool_with_labels  100,150 * 2, idlist
			stop
		}
		redraw 2
		draw_memory_pool_with_labels 100,150*2,idx
		redraw
		await 1000
	loop

;/*
	// 一部を拡張書き込みしてみる（3個ランダム選出）
	draw_memory_pool_with_labels 100,150*3,idx
	title "拡張準備中":await 2000
	title "拡張開始"
	dim idx
	repeat 6
		
		idx(cnt) = idlist(rnd(length(idlist)))
		// 拡張を引き起こすように長い文字列を書く
		append_str idx(cnt), "にゃんにゃんにゃんにゃんにゃんにゃん"
		
		debug_check_link_integrity "拡張後のリンク整合性チェック"
		if stat {
			draw_memory_pool_with_labels  100,150 * 3, idx
			stop
		}
		redraw 2
		draw_memory_pool_with_labels  100,150 * 3, idx
		redraw
		await 1000
	loop

//*/
	draw_memory_pool_with_labels  100,150 * 4, idx
	title "削除準備中":await 2000
	title "削除開始"
	dim idx
	repeat 10
		
		c = get_used_block_count()
		if c = 0 : break
		idx(cnt) = rnd(c)
		id_to_free = idx(cnt)
		free_block id_to_free
		debug_check_link_integrity "解放後のリンク整合性チェック"
		if stat {
			draw_memory_pool_with_labels  100,150 * 4, idx
			stop
		}
		redraw 2
		draw_memory_pool_with_labels  100,150 * 4, idx
		redraw
		await 1000
		
	loop

	draw_memory_pool_with_labels  100,150 * 2, idx
loop
